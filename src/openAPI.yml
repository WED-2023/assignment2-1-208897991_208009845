openapi: 3.0.3
info:
  title: Recipe Management API
  description: API for managing recipes, user authentication, and other related functionalities
  version: 1.0.0
  contact:
    name: Chen Frydman
    email: chenfrydman@gmail.com

tags:
  - name: User
    description: Endpoints related to user management
  - name: Recipe
    description: Endpoints related to recipe management
  - name: Page
    description: Endpoints related to different pages

paths:
  /: #main page
    get:
      tags:
        - Page
      summary: Retrieve the main page
      responses:
        '200':
          description: Main page content
          content:
            text/html:
              schema:
                type: string
                
  /RegisterPage:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
        '400':
          description: Bad request
          
      
  /register: #updated
    post:
      tags:
        Auth
    summary: A new user from the client is added to the server
    description: A JSON object contains all the details about the new user.
    requestBody:
      required: true
      content:
        application/json:
          schema:$ref: '#/components/schemas/User'
          description: Inventory item to add
    responses:'201':
        description: A new user has been added'400':
        description: wrong input parameters

  /LoginPage:
    post:
      tags:
        - User
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: User authenticated
        '401':
          description: Unauthorized
          
  /AboutPage:
  /SearchPage:
  /RecipeViewPage/{recipeId}:
    get:
      tags:
        - Recipe
      summary: Retrieve a specific recipe by ID
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Recipe not found

  /favorites:
    get:
      tags:
        - Recipe
      summary: Retrieve a list of favorite recipes
      responses:
        '200':
          description: A list of favorite recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeList'

  /MyRecipesPage:
    get:
      tags:
        - Recipe
      summary: Retrieve a list of user's own recipes
      responses:
        '200':
          description: A list of user's recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeList'

  /FamilyRecipesPage:
    get:
      tags:
        - Recipe
      summary: Retrieve a list of family recipes
      responses:
        '200':
          description: A list of family recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeList'

  /recipePreparingPage/{recipeId}:

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    Recipe:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ingredients:
          type: array
          items:
            type: string
        instructions:
          type: string
        favorite:
          type: boolean

    RecipeList:
      type: array
      items:
        $ref: '#/components/schemas/Recipe'

    MealPlan:
      type: object
      properties:
        id:
          type: string
        meals:
          type: array
          items:
            type: string
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CHENFRYDMAN_1/recipes/1.0.0